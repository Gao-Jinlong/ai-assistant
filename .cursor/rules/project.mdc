---
description: 项目结构
globs: 
alwaysApply: false
---
# AI Assistant 项目目录结构说明

## 项目概述

AI Assistant 是一个基于 NestJS + Next.js 的 AI 知识库管理应用，使用 pnpm workspace 进行 monorepo 管理。

## 项目技术栈

### 工具链 
- fnm: node 版本管理
- pnpm: 包管理

### 后端技术栈
- NestJS
- Prisma
- LangGraph
- Zod

### 前端技术栈
- Next.js 15
- React 19
- TailwindCSS
- shadcn-ui
  - 添加组件命令 pnpm dlx shadcn@latest add <component-name>
- React Query
- Jotai

## 仓库目录结构

```
ai-assistant/
├── apps/                    # 应用程序目录 (monorepo)
│   ├── server/             # 后端应用 (NestJS)
│   └── web/                # 前端应用 (Next.js)
├── docs/                   # 项目文档
└── package.json           # 根项目配置
```

## 后端目录结构 (apps/server/)

```
server/
├── data/                   # 数据目录
│   └── storage/           # 文件存储目录
├── prisma/                # Prisma 数据库配置
│   └── migrations/        # 数据库迁移文件
├── scripts/               # 脚本文件
├── src/                   # 源代码目录
│   ├── agents/            # AI 代理模块
│   ├── auth/              # 身份认证模块
│   ├── config/            # 配置模块
│   ├── llm/               # 大语言模型模块
│   ├── middleware/        # 中间件
│   ├── prisma/            # Prisma 服务
│   ├── storage/           # 存储模块
│   ├── user/              # 用户模块
│   ├── utils/             # 工具函数
│   ├── app.controller.ts  # 应用控制器
│   ├── app.module.ts      # 应用根模块
│   ├── app.service.ts     # 应用服务
│   └── main.ts            # 应用入口
├── test/                  # 测试文件
├── package.json           # 项目配置
└── tsconfig.json          # TypeScript 配置
```

## 前端目录结构 (apps/web/)

```
web/
├── .next/                 # Next.js 构建输出 (自动生成)
├── app/                   # App Router 目录
│   ├── [locale]/          # 国际化路由
│   │   ├── dashboard/     # 仪表板页面
│   │   ├── login/         # 登录页面
│   │   └── register/      # 注册页面
│   ├── api/               # API 路由
│   └── constant/          # 常量定义
├── components/            # React 组件
│   ├── auth/              # 认证相关组件
│   ├── conversation-list/ # 对话列表组件
│   ├── message-list/      # 消息列表组件
│   ├── sender/            # 消息发送组件
│   └── ui/                # 基础 UI 组件
├── contexts/              # React Context
├── i18n/                  # 国际化配置
├── messages/              # 国际化消息文件
├── lib/                   # 工具库
├── pages/                 # Pages Router (如有使用)
├── public/                # 静态资源
├── next.config.js         # Next.js 配置
├── package.json           # 项目配置
├── tailwind.config.js     # TailwindCSS 配置
└── tsconfig.json          # TypeScript 配置
```

